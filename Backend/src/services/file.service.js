const db = require("../config/knex");
const fs = require("fs");
const path = require("path");

/**
 * üìÅ L∆∞u file v√†o DB (v√† l∆∞u ƒë∆∞·ªùng d·∫´n t·ªáp)
 */
exports.saveFile = async ({ company_id, user_id, file, file_type }) => {
  const fileData = {
    company_id,
    user_id,
    file_name: file.originalname,
    file_url: `/uploads/${file.filename}`,
    file_type: file_type || "other",
  };
  //   console.log(fileData);

  const [id] = await db("files").insert(fileData);
  return { id, ...fileData };
};

/**
 * üìÑ L·∫•y t·∫•t c·∫£ file c·ªßa m·ªôt c√¥ng ty
 */
exports.getFilesByCompany = async (company_id) => {
  return await db("files").where({ company_id }).orderBy("uploaded_at", "desc");
};

/**
 * üîç L·∫•y 1 file theo ID
 */
exports.getFileById = async (id) => {
  return await db("files").where({ id }).first();
};

/**
 * üñº L·∫•y logo c√¥ng ty
 */
exports.getLogo = async (company_id) => {
  return await db("files")
    .where({ company_id, file_type: "logo" })
    .orderBy("uploaded_at", "desc")
    .first();
};

/**
 * üßπ Xo√° logo c≈© (khi upload logo m·ªõi)
 */
exports.deleteLogo = async (company_id) => {
  const logos = await db("files").where({ company_id, file_type: "logo" });

  for (const logo of logos) {
    // Xo√° file kh·ªèi ·ªï c·ª©ng
    try {
      const filePath = path.join(__dirname, "..", "public", logo.file_url);
      if (fs.existsSync(filePath)) {
        fs.unlinkSync(filePath);
      }
    } catch (err) {
      console.error("L·ªói xo√° file kh·ªèi ·ªï c·ª©ng:", err.message);
    }
  }

  // Xo√° record trong DB
  await db("files").where({ company_id, file_type: "logo" }).del();
};

/**
 * üóë Xo√° file (ki·ªÉm tra quy·ªÅn c√¥ng ty)
 */
exports.deleteFile = async (id, company_id) => {
  const file = await db("files").where({ id }).first();
  if (!file || file.company_id !== company_id) {
    throw new Error("Kh√¥ng c√≥ quy·ªÅn ho·∫∑c kh√¥ng t·ªìn t·∫°i");
  }

  // Xo√° file v·∫≠t l√Ω n·∫øu c√≥
  try {
    const filePath = path.join(__dirname, "..", "public", file.file_url);
    if (fs.existsSync(filePath)) {
      fs.unlinkSync(filePath);
    }
  } catch (err) {
    console.error("L·ªói khi xo√° file v·∫≠t l√Ω:", err.message);
  }

  // Xo√° record
  await db("files").where({ id }).del();
  return true;
};
